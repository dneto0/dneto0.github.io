<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Afflatus detritus</title><link>https://www.dneto.dev/</link><description>Recent content on Afflatus detritus</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>2025</copyright><lastBuildDate>Thu, 02 Jan 2025 14:00:00 -0400</lastBuildDate><atom:link href="https://www.dneto.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>WGSL: Three ways to declare pure values</title><link>https://www.dneto.dev/posts/2025/wgsl-evaluation-phase/</link><pubDate>Thu, 02 Jan 2025 14:00:00 -0400</pubDate><guid>https://www.dneto.dev/posts/2025/wgsl-evaluation-phase/</guid><description><hr><h2 id="introduction">Introduction</h2><p>The WebGPU Shading Language (or<a href="w3.org/TR/WGSL">WGSL</a>)
has four ways to declare named values:<code>var</code>,<code>const</code>,<code>override</code>, and<code>let</code>.</p><p>A<code>var</code> declares a variable: a name for<em>storage</em> holding a value.
For this post we&rsquo;ll forget about memory for now
&mdash; see what I did there? &mdash; and talk about the others.</p><p>So what&rsquo;s up with the other three?</p><h2 id="giving-names-to-pure-values">Giving names to pure values</h2><p>Each of<code>const</code>,<code>override</code>, or<code>let</code> gives a name to a<em>value</em> like a number, vector, array,
or structure.</p></description></item><item><title>Privacy Policy</title><link>https://www.dneto.dev/privacy/</link><pubDate>Sun, 19 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.dneto.dev/privacy/</guid><description><p>This site uses Google Analytics to count page views.
See<a href="https://www.google.com/policies/privacy/partners/">How Google uses data when you use our partners&rsquo; sites or apps</a>.</p><p>This site does not collect personal information.</p></description></item><item><title>About</title><link>https://www.dneto.dev/about/</link><pubDate>Fri, 10 Feb 2023 01:12:35 -0500</pubDate><guid>https://www.dneto.dev/about/</guid><description><p>I am a software developer, currently working in the Chrome team at Google.</p><p>This is my personal blog.</p><p>I work on GPU language standards, compilers, and related tooling:</p><ul><li>I am an editor for the<a href="https://w3.org/TR/WGSL">WebGPU Shading Language</a> (WGSL)</li><li>I was chair of the SPIR Working Group at<a href="https://khronos.org">Khronos</a>, working on the<a href="https://khronos.org/spir">SPIR-V intermediate language</a> for GPUs.</li><li>Some of my team&rsquo;s projects include:<ul><li><a href="https://dawn.googlesource.com/tint">Tint</a>: A WGSL compiler used by
Chrome&rsquo;s implementation of<a href="https://w3.org/TR/webgpu">WebGPU</a>.</li><li><a href="https://github.com/KhronosGroup/SPIRV-Tools">SPIRV-Tools</a>: Low level SPIR-V
utilities including an assembler, disassembler, parser, validator, and optimizer.
We maintain this on behalf of the Khronos Group.</li><li>The<a href="https://github.com/microsoft/DirectXShaderCompiler/blob/main/docs/SPIR-V.rst">SPIR-V backend</a>
for<a href="https://github.com/microsoft/DirectXShaderCompiler">DXC</a>, Microsoft&rsquo;s HLSL compiler.</li><li><a href="https://github.com/google/clspv">Clspv</a>: A prototype OpenCL C to Vulkan SPIR-V compiler.</li><li><a href="https://github.com/google/amber">Amber</a>: A text-based shader test framework.</li><li><a href="https://github.com/google/shaderc">Shaderc</a>: A wrapper around Glslang, a compiler for GLSL to SPIR-V.</li><li><a href="https://github.com/google/effcee">Effcee</a>:
A C++ library for stateful pattern matching of strings, inspired by LLVM&rsquo;s FileCheck command.
Use it fast in-process testing such as in googletest.
It is used to test DXC and SPIRV-Tools.</li></ul></li></ul><p>Previously I worked at Altera, on FPGA CAD, including the first conformant OpenCL implementation for FPGAs.</p></description></item><item><title>Is this thing on?</title><link>https://www.dneto.dev/posts/2023/my-first-post/</link><pubDate>Thu, 09 Feb 2023 22:18:55 -0500</pubDate><guid>https://www.dneto.dev/posts/2023/my-first-post/</guid><description><h2 id="hello-world">Hello world!</h2><p>Recently I wondered aloud whether I should write a blog.
I also wondered if I should call it &ldquo;Bog standard&rdquo;.</p><p>I made a<a href="https://mastodon.gamedev.place/@dneto/109772457055894516">poll</a> to ask, over on Mastodon.
Unfortunately, the poll only had a binary answer. (What a noob.)
So in the end I don&rsquo;t know how folks felt about either one of my questions, specifically.</p><p>One response was<a href="https://mastodon.gamedev.place/@sheredom/109772462178688976">&ldquo;DO IT&rdquo;</a> (Thanks, Neil!)
I took that to mean I should get on with it, finally, no matter what I called it.</p></description></item></channel></rss>